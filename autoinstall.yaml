#cloud-config
autoinstall:
  version: 1
  
  # Basic system configuration
  locale: en_US.UTF-8
  keyboard:
    layout: us
  
  # Network configuration
  network:
    network:
      version: 2
      ethernets:
        eth0:
          dhcp4: true
  
  # Storage configuration - simple single disk setup
  storage:
    layout:
      name: lvm
  
  # User configuration
  identity:
    hostname: AI-BOB
    username: matt
    password: $6$RqYP2lhZc7gqtSqF$jNkh4gpFK8Hpqnf4TiQHHiT3zWOF6Gx4fnzyFUh2A.0yCw1OhLXL4.5iWME4qSqYCP8Eab/tsPNelABgXrlbe1
    realname: System User
  
  # SSH configuration
  ssh:
    install-server: true
    allow-pw: true
  
  # Package configuration
  apt:
    primary:
      - arches: [amd64, i386]
        uri: http://archive.ubuntu.com/ubuntu
    security:
      - arches: [amd64, i386]
        uri: http://security.ubuntu.com/ubuntu
    sources:
      # Graphics drivers PPA
      graphics-drivers:
        source: 'ppa:graphics-drivers/ppa'
        keyid: 'FCAE110B1118213C'
  
  # Package selection
  packages:
    # Basic system packages
    - ubuntu-desktop-minimal
    - curl
    - wget
    - git
    - build-essential
    - dkms
    - linux-headers-generic
    
    # NVIDIA packages
    - nvidia-driver-560  # Latest available driver
    - nvidia-dkms-560
    - nvidia-utils-560
    - nvidia-settings
    - nvidia-prime
    
    # VS Code - removed due to installation issues
    # Install manually after system setup if needed
    
    # Additional useful packages
    - firefox
    - vim
    - htop
    - tree
    - unzip
    - software-properties-common
    - apt-transport-https
    - ca-certificates
    - gnupg
    - lsb-release
  
  # Late commands to run after installation
  late-commands:
    # Update package lists
    - curtin in-target --target=/target -- apt update
    
    # Install latest NVIDIA driver (in case newer version is available)
    - curtin in-target --target=/target -- ubuntu-drivers autoinstall
    
    # Enable NVIDIA persistence daemon (only if it exists)
    - curtin in-target --target=/target -- sh -c 'if systemctl list-unit-files | grep -q nvidia-persistenced; then systemctl enable nvidia-persistenced; fi'
    
    # Create user home directory if it doesn't exist
    - curtin in-target --target=/target -- mkdir -p /home/user
    - curtin in-target --target=/target -- chown user:user /home/user
    
    # Configure NVIDIA settings (only if nvidia-xconfig exists and X is available)
    - curtin in-target --target=/target -- sh -c 'if command -v nvidia-xconfig >/dev/null 2>&1; then nvidia-xconfig --allow-empty-initial-configuration || true; fi'
    
    # Set up NVIDIA environment variables (only if CUDA is installed)
    - curtin in-target --target=/target -- sh -c 'if [ -d /usr/local/cuda ]; then echo "export PATH=/usr/local/cuda/bin:\$PATH" >> /home/user/.bashrc; fi'
    - curtin in-target --target=/target -- sh -c 'if [ -d /usr/local/cuda ]; then echo "export LD_LIBRARY_PATH=/usr/local/cuda/lib64:\$LD_LIBRARY_PATH" >> /home/user/.bashrc; fi'
    
    # Fix ownership of user files
    - curtin in-target --target=/target -- chown -R user:user /home/user
    
    # Final system update
    - curtin in-target --target=/target -- apt upgrade -y
    
    # Clean up
    - curtin in-target --target=/target -- apt autoremove -y
    - curtin in-target --target=/target -- apt autoclean
  
  # Automatic reboot after installation
  shutdown: reboot
